import os
from aiogram import Dispatcher
from aiogram.dispatcher import FSMContext
from aiogram.types import Message, CallbackQuery, InputMedia, InputFile, InputMediaPhoto
from aiogram.utils import exceptions

from date_time import get_tomorow, get_today
from google_cal import GoogleCalendar, get_event_list
from fsm import PhotoSertificate
from keyboards_cal import cal_kb
from db_config import add_new_procedura, find_procedura, delete_procedura, add_new_klient, update_klient, connect, \
    cursor, add_new_sert
from keyboards import kb_mainmenu, kb_get_event_list, kb_main
from klients import Klients
from loader import dp, bot
from text_welcome import text_welcome
from text_obomne import text_obomne
import asyncio
from middleware.config import admin_id


# –°–¢–ê–†–¢
@dp.message_handler(commands=['start'])
async def start(message: Message, admin: bool):
    path = 'start_photo/start_1.jpg'
    photo = InputFile(path)
    await message.answer_photo(caption=text_welcome, photo=photo, reply_markup=kb_mainmenu)
    klient = Klients(tg_id=message.from_user.id, first_name=message.from_user.first_name,
                     last_name=message.from_user.last_name,
                     tg_username=message.from_user.username)
    tg_id = klient.tg_id
    first_name = klient.first_name
    last_name = klient.last_name
    tg_username = klient.tg_username
    new_klient = (tg_id, first_name, last_name, tg_username)
    add_new_klient(new_klient)
    print(message.from_user.id)
    cursor.execute('SELECT * FROM photo_sertificate')
    data = cursor.fetchall()


# –ì–õ–ê–í–ù–û–ï –ú–ï–ù–Æ
@dp.message_handler(commands=['main_menu'], state='*')
async def info(message: Message, state: FSMContext):
    klient = Klients(tg_id=message.from_user.id, first_name=message.from_user.first_name,
                     last_name=message.from_user.last_name,
                     tg_username=message.from_user.username)
    tg_id = klient.tg_id
    first_name = klient.first_name
    last_name = klient.last_name
    tg_username = klient.tg_username
    new_klient = (tg_id, first_name, last_name, tg_username)
    add_new_klient(new_klient)
    print(message.from_user.id)
    await state.finish()
    try:
        message_id = message.message_id
        while True:
            await bot.delete_message(message.chat.id, message_id)
            message_id = message_id - 1
    except:
        pass

    await message.answer(text='-------------–ì–õ–ê–í–ù–û–ï –ú–ï–ù–Æ-------------', reply_markup=kb_mainmenu)

    new_data = (None, message.from_user.id)
    update_klient(new_data, 'last_procedure')
    try:
        info = cursor.execute('SELECT * FROM klients WHERE status_recording="in_work"').fetchall()
        new_data = ('otmena', info[0][0])
        update_klient(new_data, 'status_recording')
    except:
        print('ok')


# –î–û–ë–ê–í–ò–¢–¨ –°–ï–†–¢–ò–§–ò–ö–ê–¢
@dp.callback_query_handler(text='add_sert', state=None)
async def add_photo_sert(cb: CallbackQuery ,state: FSMContext):
    await cb.answer('üëå')
    await bot.send_message(text=
        '–ü—Ä–∏—à–ª–∏ —Ñ–æ—Ç–æ –ø–æ –æ–¥–Ω–æ–π, —É –ø–æ—Å–ª–µ–¥–Ω–µ–π –¥–æ–±–∞–≤—å –æ–ø–∏—Å–∞–Ω–∏–µ "–°—Ç–æ–ø". –¢–∞–∫–∂–µ –º–æ–∂–Ω–æ –Ω–∞–ø–∏—Å–∞—Ç—å "–°—Ç–æ–ø" –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏.', chat_id=cb.from_user.id)
    await PhotoSertificate.photo_id.set()


@dp.message_handler(content_types='photo', state=PhotoSertificate.photo_id)
async def get_photo_sert(message: Message, admin: bool, state: FSMContext):
    if admin:
        date = os.listdir('sertificat_file')
        if len(date) != 0:
            print(date)

            for file in date:
                file_index = int(file.split('_')[1].split('.')[0])
                os.rename(f'sertificat_file/{file}', f'sertificat_file/new_{file_index}.jpg')
            new_date = os.listdir('sertificat_file')
            for file in new_date:
                file_index = int(file.split('_')[1].split('.')[0])
                os.rename(f'sertificat_file/{file}', f'sertificat_file/sert_{file_index+1}.jpg')

        await message.photo[-1].download(destination_file='sertificat_file/sert_1.jpg')
        await PhotoSertificate.photo_id.set()
        await message.answer('–§–æ—Ç–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ!')


@dp.message_handler(state=PhotoSertificate.photo_id)
async def error(message: Message, state: FSMContext):
    if message.text != '–°—Ç–æ–ø':
        await message.answer(
            '–ü—Ä–∏—à–ª–∏ —Ñ–æ—Ç–æ –ø–æ –æ–¥–Ω–æ–π. –ö–æ–≥–¥–∞ –∑–∞–∫–æ–Ω—á–∏—à—å, –Ω–∞–ø–∏—à–∏ —Å–ª–æ–≤–æ "–°—Ç–æ–ø"')
        await PhotoSertificate.photo_id.set()
    else:
        await message.answer('–ó–∞–∫–æ–Ω—á–∏–ª–∏ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ!')
        await state.finish()


@dp.message_handler(commands=['admin'])
async def get_event_l(message: Message, admin: bool):
    if admin:
        await message.answer(text='–ü–æ–∫–∞ —Ç–∞–∫', reply_markup=kb_get_event_list)


@dp.message_handler(commands=['today'])
async def go_napominanie(message: Message, admin: bool):
    if admin:
        calendar_id = '1dbae5a038d3414d565f0e8ba342c1fa018ceb2d3d5bd0245ec6f610b978a446@group.calendar.google.com'
        event_list = get_event_list(calendar_id=calendar_id)
        today_date = get_today()
        obj = GoogleCalendar()
        index = 0
        for event in event_list:
            event_date = event.split(' - ')[1]
            if event_date == today_date:
                name = obj.get_event(calendar_id=calendar_id, event_id=event_list.get(event))['summary']
                procedura = \
                    str(obj.get_event(calendar_id=calendar_id, event_id=event_list.get(event))['description']).split(
                        '–ü—Ä–æ—Ü–µ–¥—É—Ä–∞: ')[1].split('\n')[0]
                tg_id = \
                    str(obj.get_event(calendar_id=calendar_id, event_id=event_list.get(event))['description']).split(
                        'id –∫–ª–∏–µ–Ω—Ç–∞: ')[1]
                time_event = f"{str(obj.get_event(calendar_id=calendar_id, event_id=event_list.get(event))['start']['dateTime']).split('T')[1].split(':')[0]}:" \
                             f"{str(obj.get_event(calendar_id=calendar_id, event_id=event_list.get(event))['start']['dateTime']).split('T')[1].split(':')[1]}"
                await bot.send_message(
                    text=f'–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {str(name).split(" ")[0] if " " in str(name) else name}! –ù–∞–ø–æ–º–∏–Ω–∞–µ–º, —á—Ç–æ —Å–µ–≥–æ–¥–Ω—è {today_date} –í—ã –∑–∞–ø–∏—Å–∞–Ω—ã –Ω–∞ –ø—Ä–æ—Ü–µ–¥—É—Ä—É: {procedura}.'
                         f'\n\n–í—Ä–µ–º—è –∑–∞–ø–∏—Å–∏ - {time_event}\n\n–ê–¥—Ä–µ—Å: –≥. –©—ë–ª–∫–æ–≤–æ, –º–∏–∫—Ä–æ—Ä–∞–π–æ–Ω –ü–æ—Ç–∞–ø–æ–≤—Å–∫–∏–π, –¥.1, –∫.1, BeautySpace RAI\n–¢–µ–ª–µ—Ñ–æ–Ω –¥–ª—è —Å–≤—è–∑–∏: +7(916)-261-43-01 ', chat_id=tg_id)
                await bot.send_message(chat_id=admin_id[0],
                                       text=f'–ù–∞ —Å–µ–≥–æ–¥–Ω—è –µ—Å—Ç—å –∑–∞–ø–∏—Å—å: {name}.\n–ü—Ä–æ—Ü–µ–¥—É—Ä–∞: {procedura}.\n–í—Ä–µ–º—è: {time_event}.')
                await bot.send_message(chat_id=admin_id[1],
                                       text=f'–ù–∞ —Å–µ–≥–æ–¥–Ω—è –µ—Å—Ç—å –∑–∞–ø–∏—Å—å: {name}.\n–ü—Ä–æ—Ü–µ–¥—É—Ä–∞: {procedura}.\n–í—Ä–µ–º—è: {time_event}.')
                index = 1

        if index == 0:
            await bot.send_message(chat_id=admin_id[1], text='–ù–∞ —Å–µ–≥–æ–¥–Ω—è –∑–∞–ø–∏—Å–µ–π –Ω–µ—Ç.')
            await bot.send_message(chat_id=admin_id[0], text='–ù–∞ —Å–µ–≥–æ–¥–Ω—è –∑–∞–ø–∏—Å–µ–π –Ω–µ—Ç.')
